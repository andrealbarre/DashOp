expression 'Erreurs dans Export-RDV' =
		let
		Source = #"Export-RDV",
		  #"Incompatibilités de types détectées" = let
		    tableWithOnlyPrimitiveTypes = Table.SelectColumns(Source, Table.ColumnsOfType(Source, {type nullable number, type nullable text, type nullable logical, type nullable date, type nullable datetime, type nullable datetimezone, type nullable time, type nullable duration})),
		    recordTypeFields = Type.RecordFields(Type.TableRow(Value.Type(tableWithOnlyPrimitiveTypes))),
		    fieldNames = Record.FieldNames(recordTypeFields),
		    fieldTypes = List.Transform(Record.ToList(recordTypeFields), each [Type]),
		    pairs = List.Transform(List.Positions(fieldNames), (i) => {fieldNames{i}, (v) => if v = null or Value.Is(v, fieldTypes{i}) then v else error [Message = "Le type de la valeur ne correspond pas à celui de la colonne.", Detail = v], fieldTypes{i}})
		in
		    Table.TransformColumns(Source, pairs),
		  #"Index ajouté" = Table.AddIndexColumn(#"Incompatibilités de types détectées", "Numéro de ligne" ,1),
		  #"Conserver les erreurs" = Table.SelectRowsWithErrors(#"Index ajouté", {"Date d'extraction", "CONCESSION", "ATELIER", "LAST UTILISATEUR", "PREMIER UTILISATEUR", "RÉCEPTION", "N° CLIENT", "NOM CLIENT", "EMAIL CLIENT", "DATE ARR.", "HEURE ARR.", "HEURE REST.", "IMMATRICULATION", "KMS", "V.I.N.", "DATE DE MEC", "DATE DE CRÉATION RDV", "INTERVENTION", "NATURE RDV", "CLIENT ATTEND SUR PLACE", "VÉH. COURTOISIE", "CONVOYAGE", "INDICATEUR", "CLIENT NON VENU", "Receptionné", "Date extraction  TXT", "Clé Immat", "Clé Atelier"}),
		  #"Colonnes permutées" = Table.ReorderColumns(#"Conserver les erreurs", {"Numéro de ligne", "Date d'extraction", "CONCESSION", "ATELIER", "LAST UTILISATEUR", "PREMIER UTILISATEUR", "RÉCEPTION", "N° CLIENT", "NOM CLIENT", "EMAIL CLIENT", "DATE ARR.", "HEURE ARR.", "HEURE REST.", "IMMATRICULATION", "KMS", "V.I.N.", "DATE DE MEC", "DATE DE CRÉATION RDV", "INTERVENTION", "NATURE RDV", "CLIENT ATTEND SUR PLACE", "VÉH. COURTOISIE", "CONVOYAGE", "INDICATEUR", "CLIENT NON VENU", "Receptionné", "Date extraction  TXT", "Clé Immat", "Clé Atelier"})
		in
		  #"Colonnes permutées"
	lineageTag: 28b192b2-f0d8-4e0e-9656-f93ac5f6c5ca
	queryGroup: 'Erreurs des requêtes – 08/09/2025 09:46:52'

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'Erreurs dans Export-RDV (2)' =
		let
		Source = #"Export-RDV",
		  #"Incompatibilités de types détectées" = let
		    tableWithOnlyPrimitiveTypes = Table.SelectColumns(Source, Table.ColumnsOfType(Source, {type nullable number, type nullable text, type nullable logical, type nullable date, type nullable datetime, type nullable datetimezone, type nullable time, type nullable duration})),
		    recordTypeFields = Type.RecordFields(Type.TableRow(Value.Type(tableWithOnlyPrimitiveTypes))),
		    fieldNames = Record.FieldNames(recordTypeFields),
		    fieldTypes = List.Transform(Record.ToList(recordTypeFields), each [Type]),
		    pairs = List.Transform(List.Positions(fieldNames), (i) => {fieldNames{i}, (v) => if v = null or Value.Is(v, fieldTypes{i}) then v else error [Message = "Le type de la valeur ne correspond pas à celui de la colonne.", Detail = v], fieldTypes{i}})
		in
		    Table.TransformColumns(Source, pairs),
		  #"Index ajouté" = Table.AddIndexColumn(#"Incompatibilités de types détectées", "Numéro de ligne" ,1),
		  #"Conserver les erreurs" = Table.SelectRowsWithErrors(#"Index ajouté", {"Date d'extraction", "CONCESSION", "ATELIER", "LAST UTILISATEUR", "PREMIER UTILISATEUR", "RÉCEPTION", "N° CLIENT", "NOM CLIENT", "EMAIL CLIENT", "DATE ARR.", "HEURE ARR.", "HEURE REST.", "IMMATRICULATION", "KMS", "V.I.N.", "DATE DE MEC", "DATE DE CRÉATION RDV", "INTERVENTION", "NATURE RDV", "CLIENT ATTEND SUR PLACE", "VÉH. COURTOISIE", "CONVOYAGE", "INDICATEUR", "CLIENT NON VENU", "Receptionné", "Date extraction  TXT", "Clé Immat", "Clé Atelier", "DATE ARR. - format TXT", "doublon"}),
		  #"Colonnes permutées" = Table.ReorderColumns(#"Conserver les erreurs", {"Numéro de ligne", "Date d'extraction", "CONCESSION", "ATELIER", "LAST UTILISATEUR", "PREMIER UTILISATEUR", "RÉCEPTION", "N° CLIENT", "NOM CLIENT", "EMAIL CLIENT", "DATE ARR.", "HEURE ARR.", "HEURE REST.", "IMMATRICULATION", "KMS", "V.I.N.", "DATE DE MEC", "DATE DE CRÉATION RDV", "INTERVENTION", "NATURE RDV", "CLIENT ATTEND SUR PLACE", "VÉH. COURTOISIE", "CONVOYAGE", "INDICATEUR", "CLIENT NON VENU", "Receptionné", "Date extraction  TXT", "Clé Immat", "Clé Atelier", "DATE ARR. - format TXT", "doublon"})
		in
		  #"Colonnes permutées"
	lineageTag: 4047fe34-41bb-49f1-a165-3ec6ee43bcb2
	queryGroup: 'Erreurs des requêtes – 13/10/2025 16:52:31'

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

